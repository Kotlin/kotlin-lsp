{
  "name": "kotlin",
  "displayName": "Kotlin by JetBrains",
  "description": "Language Support for Kotlin by JetBrains",
  "author": "JetBrains",
  "publisher": "JetBrains",
  "bugs": "https://github.com/Kotlin/kotlin-lsp",
  "icon": "icons/kotlin.png",
  "version": "0.0.1",
  "license": "Apache-2.0",
  "repository": {
    "url": "https://github.com/Kotlin/kotlin-lsp",
    "directory": "kotlin-vscode"
  },
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "main": "./dist/extension",
  "activationEvents": [
    "onLanguage:kotlin",
    "onCommand:jetbrains.activateLsp"
  ],
  "contributes": {
    "languages": [
      {
        "id": "kotlin",
        "aliases": [
          "Kotlin",
          "kotlin"
        ],
        "extensions": [
          ".kt"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "kotlin",
        "scopeName": "source.kotlin",
        "path": "./syntaxes/kotlin.tmLanguage.json"
      }
    ],
    "configuration": [
      {
      "title": "LSP Server",
      "properties": {
        "kotlinLSP.dev.serverPort": {
          "type": "number",
          "default": -1,
          "description": "Port for the locally started Kotlin Language Server to listen on. -1 to start the bundled LSP"
        },
        "kotlinLSP.jrePathToRunLsp": {
          "type": "string",
          "default": null,
          "description": "A path to the JRE that will be used to run the LSP. It should be at least version 17. If not specified, default java version will be used"
        },
        "kotlinLSP.additionalJvmArgs": {
          "type": "array",
          "default": [],
          "description": "Additional JVM arguments to pass to the LSP server"
        }
      }
    },
      {
        "title": "Inlay",
        "properties": {
          "jetbrains.kotlin.hints.settings.types.property": {
            "type": "boolean",
            "default": true,
            "description": "Show inlay hints for property types"
          },
          "jetbrains.kotlin.hints.settings.types.variable": {
            "type": "boolean",
            "default": true,
            "description": "Show inlay hints for local variable types"
          },
          "jetbrains.kotlin.hints.type.function.return": {
            "type": "boolean",
            "default": true,
            "description": "Show inlay hints for function return types"
          },
          "jetbrains.kotlin.hints.type.function.parameter": {
            "type": "boolean",
            "default": true,
            "description": "Show inlay hints for function parameter types"
          },
          "jetbrains.kotlin.hints.settings.lambda.return": {
            "type": "boolean",
            "default": true,
            "description": "Show inlay hints for return expressions"
          },
          "jetbrains.kotlin.hints.lambda.receivers.parameters": {
            "type": "boolean",
            "default": true,
            "description": "Show inlay hints for implicit receivers and parameters"
          },
          "jetbrains.kotlin.hints.settings.value.ranges": {
            "type": "boolean",
            "default": true,
            "description": "Show inlay hints for ranges"
          },
          "jetbrains.kotlin.hints.value.kotlin.time": {
            "type": "boolean",
            "default": true,
            "description": "Show kotlin.time package warning inlay hints"
          },
          "jetbrains.kotlin.hints.parameters": {
            "type": "boolean",
            "default": true,
            "description": "Show parameter names"
          },
          "jetbrains.kotlin.hints.parameters.compiled": {
            "type": "boolean",
            "default": true,
            "description": "Show compiled parameter names"
          },
          "jetbrains.kotlin.hints.parameters.excluded": {
            "type": "boolean",
            "default": false,
            "description": "Show excluded parameter names"
          }
        }
      }
    ],
    "commands": [
      {
        "command": "jetbrains.exportWorkspaceToJson",
        "category": "Workspaces",
        "title": "Export workspace structure to JSON"
      },
      {
        "command": "jetbrains.kotlin.restartLsp",
        "category": "Kotlin",
        "title": "Restart LSP server"
      }
    ]
  },
  "devDependencies": {
    "@types/node": "^22.13.8",
    "@types/vscode": "^1.96.0",
    "ts-loader": "^9.5.2",
    "typescript": "^5.7.2",
    "vscode-tmgrammar-test": "^0.1.3",
    "webpack": "^5.100.2",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "vscode-languageclient": "9.0.1"
  },
  "scripts": {
    "compile": "webpack --mode development",
    "watch": "webpack --mode development --watch",
    "vscode:prepublish": "npm run package && npm run unpack-server",
    "package": "webpack --mode production --devtool hidden-source-map",
    "apply-intellij": "node apply-intellij.js",
    "unpack-server": "rm -rf server && mkdir -p server && unzip -o $LSP_ZIP_PATH -d server",
    "test": "vscode-tmgrammar-snap --grammar syntaxes/kotlin.tmLanguage.json --scope source.kotlin testSources/tokenization/*.kt",
    "updateGrammarTests": "vscode-tmgrammar-snap --grammar syntaxes/kotlin.tmLanguage.json --scope source.kotlin --updateSnapshot testSources/tokenization/*.kt"
  }
}
